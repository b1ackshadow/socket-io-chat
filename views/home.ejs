<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link
      href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"
      rel="stylesheet"
      id="bootstrap-css"
    />
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" type="text/css" rel="stylesheet"

    <title>Document</title>
    <style>
    .container{max-width:1170px; margin:auto;}
img{ max-width:100%;}
.inbox_people {
  background: #f8f8f8 none repeat scroll 0 0;
  float: left;
  overflow: hidden;
  width: 40%; border-right:1px solid #c4c4c4;
}
.inbox_msg {
  border: 1px solid #c4c4c4;
  clear: both;
  overflow: hidden;
}
.top_spac{ margin: 20px 0 0;}


.recent_heading {float: left; width:40%;}
.srch_bar {
  display: inline-block;
  text-align: right;
  width: 60%; padding:
}
.headind_srch{ padding:10px 29px 10px 20px; overflow:hidden; border-bottom:1px solid #c4c4c4;}

.recent_heading h4 {
  color: #05728f;
  font-size: 21px;
  margin: auto;
}
.srch_bar input{ border:1px solid #cdcdcd; border-width:0 0 1px 0; width:80%; padding:2px 0 4px 6px; background:none;}
.srch_bar .input-group-addon button {
  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
  border: medium none;
  padding: 0;
  color: #707070;
  font-size: 18px;
}
.srch_bar .input-group-addon { margin: 0 0 0 -27px;}

.chat_ib h5{ font-size:15px; color:#464646; margin:0 0 8px 0;}
.chat_ib h5 span{ font-size:13px; float:right;}
.chat_ib p{ font-size:14px; color:#989898; margin:auto}
.chat_img {
  float: left;
  width: 11%;
}
.chat_ib {
  float: left;
  padding: 0 0 0 15px;
  width: 88%;
}

.chat_people{ overflow:hidden; clear:both;}
.chat_list {
  border-bottom: 1px solid #c4c4c4;
  margin: 0;
  padding: 18px 16px 10px;
}
.inbox_chat { height: 550px; overflow-y: scroll;}

.active_chat{ background:#ebebeb;}

.incoming_msg_img {
  display: inline-block;
  width: 6%;
}
.received_msg {
  display: inline-block;
  padding: 0 0 0 10px;
  vertical-align: top;
  width: 92%;
 }
 .received_withd_msg p {
  background: #ebebeb none repeat scroll 0 0;
  border-radius: 3px;
  color: #646464;
  font-size: 14px;
  margin: 0;
  padding: 5px 10px 5px 12px;
  width: 100%;
}
.time_date {
  color: #747474;
  display: block;
  font-size: 12px;
  margin: 8px 0 0;
}
.received_withd_msg { width: 57%;}
.mesgs {
  float: left;
  padding: 30px 15px 0 25px;
  width: 60%;
}

 .sent_msg p {
  background: #05728f none repeat scroll 0 0;
  border-radius: 3px;
  font-size: 14px;
  margin: 0; color:#fff;
  padding: 5px 10px 5px 12px;
  width:100%;
}
.outgoing_msg{ overflow:hidden; margin:26px 0 26px;}
.sent_msg {
  float: right;
  width: 46%;
}
.input_msg_write input {
  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;
  border: medium none;
  color: #4c4c4c;
  font-size: 15px;
  min-height: 48px;
  width: 100%;
}

.type_msg {border-top: 1px solid #c4c4c4;position: relative;}
.msg_send_btn {
  background: #05728f none repeat scroll 0 0;
  border: medium none;
  border-radius: 50%;
  color: #fff;
  cursor: pointer;
  font-size: 17px;
  height: 33px;
  position: absolute;
  right: 0;
  top: 11px;
  width: 33px;
}
.messaging { padding: 0 0 50px 0;}
.msg_history {
  height: 516px;
  overflow-y: auto;
}</style>

<style>
.mesgs{
  overflow: scroll;

}
</style>
  </head>
  <body>
      <h4 id="user"><%=JSON.stringify(user) || ''%></h4>
      <input type="hidden" id="from_user" value=<%=JSON.stringify(user._id)%>>
    <!-- <h1 id="user"><%=JSON.stringify(user) || ''%></h1>

    <div>
      <h2>Friends list</h2>
      <ul id="list"></ul>
    </div>
    <div style="position: relative;float:right;">
      <form action="">
        <h3 id="to"></h3>
        <input id="msg" type="text" />
        <button id="send">Send</button>
      </form>
    </div> -->
    <div class="container">
      <div class="messaging">
        <div class="inbox_msg">
          <div class="inbox_people">
            <div class="headind_srch">
              <div class="recent_heading">
                <h4>Messages</h4>
              </div>
              
            </div>
            <div class="inbox_chat">
            <!-- list of active users will go here dynamically -->
              
            </div>
          </div>
          <div class="mesgs">
            <!-- this is for using receiver socket id -->
            <input type="hidden" id="to">
            <h4 id="to_name" style="text-align: center"></h4>

            <div class="msg_history">
              <!-- <div class="incoming_msg">
                <div class="incoming_msg_img">
                  <img
                    src="https://ptetutorials.com/images/user-profile.png"
                    alt="sunil"
                  />
                </div>
                <div class="received_msg">
                  <div class="received_withd_msg">
                    <p>Test which is a new approach to have all solutions</p>
                    <span class="time_date"> 11:01 AM | June 9</span>
                  </div>
                </div>
              </div> -->
              
              <!-- end -->
              
            </div>
            <div class="type_msg">
              <div class="input_msg_write">
                <input
                  type="text"
                  class="write_msg"
                  placeholder="Type a message"
                />
                <button class="msg_send_btn" type="button">
                  <i class="fa fa-paper-plane-o" aria-hidden="true"></i>
                </button>
              </div>
            </div>
          </div>

          <!-- history messages end -->
        </div>
      </div>
    </div>
  </body>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const user = document.getElementById("user").innerHTML;

    socket.emit("addUser", user);

const received = (msg)=> `
              <div class="received_msg">
                  <div class="received_withd_msg">
                    <p>${msg}</p>
                    <!--<span class="time_date"> 11:01 AM | June 9</span>-->
                  </div>
                </div>`
    socket.on("msg", msg => {
      $('.msg_history').append(received(msg.msg))
      
    });
    socket.on("friendsList", friends => {
      // document.getElementById("to").innerHTML = "";

      // let template = 
      // console.log(friends);
      
      let data = friends.map(key => `<div class="chat_list">
                <div class="chat_people">
                  <div class="chat_img">
                    <input id="to_socket_id" type="hidden" value=${key.id}>
                    <input id="to_user_id" type="hidden" value=${key._id}>
                    <input id="name" type="hidden" value=${key.name}>

                    <img
                      src="https://ptetutorials.com/images/user-profile.png"
                      alt=${key.name}
                    />
                  </div>
                  <div class="chat_ib">
                    <h5>${key.name}</h5>
                    
                  </div>
                </div>
              </div>`).join();
          
      
      document.getElementsByClassName("inbox_chat")[0].innerHTML = data;
    });
  </script>
  <script type="text/javascript">
    function getEventTarget(e) {
      e = e || window.event;
      return e.target || e.srcElement;
    }

//scroll up always messages
function updateScroll(){
    var element = document.getElementById("msg_history");
    element.scrollTop = element.scrollHeight;
}
setInterval(updateScroll,1000);




    $(document).on("click",".chat_people", function () {
      // console.log($(this));
   let to_socket_id = $(this).find('#to_socket_id').attr('value')
   let to_user_id = $(this).find('#to_user_id').attr('value')
   let to_name = $(this).find('#name').attr('value')
   //get historical messages
    
   //set from and to
   $('#to').val(to_socket_id)
   $('#to_name').html(`Chatting with <b>${to_name}</b>`)

   //from user mongodb id
   let from_user = $('#from_user').val()
   
    
   //populate inbox history
   //  make an jquery ajax request 
   $.get(`/chat_history/${from_user}/${to_user_id}`, function (data, textStatus, jqXHR) {
    let history = data.map(({messages})=>{
      if(messages.from === to_user_id ){
        return received(messages.text)
      }
      return sent(messages.text)
    })    

    $('.msg_history').html(history)
 

});

const received = (msg)=> `
              <div class="received_msg">
                  <div class="received_withd_msg">
                    <p>${msg}</p>
                    <!--<span class="time_date"> 11:01 AM | June 9</span>-->
                  </div>
                </div>`
const sent = (msg) => `
              <div class="outgoing_msg">
                <div class="sent_msg">
                  <p>${msg}</p>
                  <!--<span class="time_date"> 11:01 AM | June 9</span>-->
                </div>
              </div>`






});

//submit via enter
$('.write_msg').keyup((e)=>{
if(e.which === 13){
  //simulate send button
  $('.msg_send_btn').trigger('click')
  $('.write_msg').val('')
}  
})



///on click send message 
$('.msg_send_btn').click((e)=>{
  e.preventDefault()
    let msg = $(".write_msg").val();

      let to = $("#to").val();

      if (msg.length !== 0 && to.length!==0) {
        let data = { from: socket.id, msg, to }
        console.log(data);
        
        socket.emit("msg",data );
      }
})








    // var ul = document.getElementById("list");
    // ul.onclick = function(event) {
    //   var target = getEventTarget(event);
    //   document.getElementById("to").innerHTML = target.innerHTML;
    // };

    // document.getElementById("send").onclick = e => {
    //   e.preventDefault();
    //   let msg = document.getElementById("msg").value;

    //   let to = document.getElementById("to").innerHTML;

    //   if (msg.length !== 0) {
    //     socket.emit("msg", { from: socket.id, msg, to });
    //   }
    // };
  </script>
</html>
